def get_secret_number(player):
    while True:
        secret_number = input("Player {}: Set your multi-digit number: ".format(player))
        if secret_number.isdigit():
            return secret_number
        else:
            print("Please enter a valid multi-digit number.")

def get_guess(player):
    guess = input("Player {}: Enter your guess: ".format(player))
    return guess

def evaluate_guess(secret_number, guess):
    correct_digits = sum(1 for s, g in zip(secret_number, guess) if s == g)
    return correct_digits

def play_mastermind_two_players():
    secret_number_player1 = get_secret_number(1)
    print("Player 2, try to guess Player 1's number!")

    attempts_player2 = 0
    while True:
        guess_player2 = get_guess(2)

        attempts_player2 += 1
        correct_digits = evaluate_guess(secret_number_player1, guess_player2)

        if correct_digits == len(secret_number_player1):
            print("Player 2 wins! They guessed the number {} in {} attempts.".format(secret_number_player1, attempts_player2))
            return

        print("Hint: {} digits are correct.".format(correct_digits))

    secret_number_player2 = get_secret_number(2)
    print("Player 1, try to guess Player 2's number!")

    attempts_player1 = 0
    while True:
        guess_player1 = get_guess(1)

        attempts_player1 += 1
        correct_digits = evaluate_guess(secret_number_player2, guess_player1)

        if correct_digits == len(secret_number_player2):
            print("Player 1 wins! They guessed the number {} in {} attempts.".format(secret_number_player2, attempts_player1))
            return

        print("Hint: {} digits are correct.".format(correct_digits))
play_mastermind_two_players()